{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"def",
				"default"
			],
			[
				"cl",
				"click"
			],
			[
				"get",
				"get_client_ip"
			],
			[
				"api",
				"api_errors"
			],
			[
				"sho",
				"show_notif"
			],
			[
				"swap",
				"swapApp"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"twi",
				"twisted_qs"
			],
			[
				"tex",
				"texto_cambiado"
			],
			[
				"mon",
				"money1"
			],
			[
				"post",
				"post_data"
			],
			[
				"True",
				"True"
			],
			[
				"clean",
				"cleaned_data"
			],
			[
				"re",
				"request"
			],
			[
				"S",
				"SwapForm"
			],
			[
				"item",
				"items1"
			],
			[
				"user",
				"user_update"
			],
			[
				"aut",
				"auth_login"
			],
			[
				"own",
				"owner_field"
			],
			[
				"slug",
				"slugify"
			],
			[
				"ge",
				"get_list_or_404"
			],
			[
				"Item",
				"ItemImageInline"
			],
			[
				"for",
				"forms"
			],
			[
				"slu",
				"slugify"
			],
			[
				"fa",
				"faults_done"
			],
			[
				"to",
				"total_points"
			],
			[
				"Se",
				"Settings"
			],
			[
				"w",
				"write"
			],
			[
				"n",
				"n"
			],
			[
				"sco",
				"score_name"
			],
			[
				"make",
				"make_grid_search"
			],
			[
				"y_te",
				"y_test_pred"
			],
			[
				"VA",
				"VARIABLE_LIST"
			],
			[
				"si",
				"site_preds"
			],
			[
				"y",
				"y_test"
			],
			[
				"plo",
				"plot_training_deviance"
			],
			[
				"X",
				"X"
			],
			[
				"prin",
				"print_metrics"
			],
			[
				"r2",
				"r2_score"
			],
			[
				"data",
				"dataframes"
			],
			[
				"res",
				"result_df"
			],
			[
				"X_",
				"X_pred"
			],
			[
				"resul",
				"resultado"
			],
			[
				"X_t",
				"X_test"
			],
			[
				"right",
				"right"
			],
			[
				"y_",
				"y_test_df"
			],
			[
				"hour",
				"hour"
			],
			[
				"site",
				"site_outcome"
			],
			[
				"as",
				"as_matrix"
			],
			[
				"pred",
				"pred_array"
			],
			[
				"result_df",
				"result_df"
			],
			[
				"x",
				"x"
			],
			[
				"DA",
				"DataFrame"
			],
			[
				"pre",
				"pred_array"
			],
			[
				"sit",
				"site_forecast"
			],
			[
				"test",
				"test_df"
			],
			[
				"da",
				"dateobj"
			],
			[
				"date",
				"dateobj"
			],
			[
				"tra",
				"train_df"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 54.0,
		"selected_items":
		[
			[
				"pac",
				"Preferences: Browse Packages"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/fabio/src/swapr/swapr.sublime-project",
		"/home/fabio/src/superliga_yahoo/scrape-curl.sh",
		"/home/fabio/src/swapr/swapr/users/models.py",
		"/home/fabio/src/swapr/templates/users/user_detail.html",
		"/home/fabio/src/swapr/templates/swaps/swap_new.html",
		"/home/fabio/src/swapr/swapr/settings.py",
		"/home/fabio/src/swapr/templates/registration/base.html",
		"/home/fabio/src/swapr/templates/home.html",
		"/home/fabio/src/swapr/swapr/local_settings.py",
		"/home/fabio/src/swapr/swapr/templatetags/active.py",
		"/home/fabio/src/swapr/templates/swaps/swap_list.html",
		"/home/fabio/src/swapr/swapr/tags.py",
		"/home/fabio/src/swapr/templates/registration/login.html",
		"/home/fabio/src/swapr/swapr/urls.py",
		"/home/fabio/src/swapr/swapr/swaps/models.py",
		"/home/fabio/src/swapr/swapr/swaps/views.py",
		"/home/fabio/src/swapr/swapr/swaps/forms.py",
		"/home/fabio/src/swapr/swapr/swaps/tests.py",
		"/home/fabio/src/swapr/swapr/users/tests.py",
		"/home/fabio/src/swapr/static/custom/page.css",
		"/home/fabio/src/truequing/truequing/templates/barters/barter_detail.html",
		"/home/fabio/src/swapr/static/custom/swaps.js",
		"/home/fabio/src/swapr/templates/base.html",
		"/home/fabio/src/swapr/templates/swaps/swap_detail.html",
		"/home/fabio/src/swapr/swapr/users/views.py",
		"/home/fabio/src/swapr/swapr/swaps/admin.py",
		"/home/fabio/src/swapr/swapr/items/tests.py",
		"/home/fabio/src/swapr/swapr/items/forms.py",
		"/home/fabio/src/swapr/swapr/items/views.py",
		"/home/fabio/src/swapr/swapr/items/models.py",
		"/home/fabio/src/swapr/swapr/swaps/admin.pỳ",
		"/home/fabio/src/swapr/swapr/users/forms.py",
		"/home/fabio/src/swapr/templates/items/item_form.html",
		"/home/fabio/src/swapr/swapr/items/admin.py",
		"/home/fabio/src/swapr/templates/registration/password_reset_confirm.html",
		"/home/fabio/src/swapr/templates/registration/password_change_form.html",
		"/home/fabio/src/swapr/templates/registration/activation_complete.html",
		"/home/fabio/src/viento_estonia/scraper_4energia_ee/scraper_4energia_ee/4energia",
		"/home/fabio/src/kaggle/fa.py",
		"/home/fabio/src/kaggle/wind_pred.py",
		"/home/fabio/src/kaggle/gauss.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"'",
			"\"",
			"'",
			"18522",
			"\"",
			"isacc",
			"pendin",
			"isacc",
			", ",
			"debug",
			"row-fluid",
			"money",
			"self.object",
			".miacuerdo",
			"#midinero",
			"hidden",
			"old_swap",
			"print",
			"if",
			"user2",
			"1",
			"money1",
			"money1ç",
			"money1",
			"oferta-btn",
			"oferta",
			"form",
			"demo-frame",
			"market_price",
			"toolbar",
			"jqu",
			"print",
			"fa",
			"X_pred",
			"hors"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\\"",
			"\"",
			"${i}",
			"'",
			"row",
			"swap",
			".suacuerdo",
			".miacuerdo",
			"2\n		clf = GridSearchCV(GradientBoostingRegressor(), tuned_parameters, n_jobs=8,score_func=score_func)\n		clf.fit(X_train, y_train, cv=5)\n\n		print \"Best parameters set found on development set:\"\n		print\n		print clf.best_estimator_\n		print\n		print \"Grid scores on development set:\"\n		print\n		for params, mean_score, scores in clf.grid_scores_:\n			print \"%0.3f (+/-%0.03f) for %r\" % (\n				mean_score, scores.std() / 2, params)\n		print",
			"f.write(\n\n		clf = GridSearchCV(GradientBoostingRegressor(), tuned_parameters, n_jobs=8,score_func=score_func)\n		clf.fit(X_train, y_train, cv=5)\n\n		print \"Best parameters set found on development set:\"\n		print\n		print clf.best_estimator_\n		print\n		print \"Grid scores on development set:\"\n		print\n		for params, mean_score, scores in clf.grid_scores_:\n			print \"%0.3f (+/-%0.03f) for %r\" % (\n				mean_score, scores.std() / 2, params)\n		print",
			"print \"# Tuning hyper-parameters for %s\" % score_name\n		print\n\n		clf = GridSearchCV(GradientBoostingRegressor(), tuned_parameters, n_jobs=8,score_func=score_func)\n		clf.fit(X_train, y_train, cv=5)\n\n		print \"Best parameters set found on development set:\"\n		print\n		print clf.best_estimator_\n		print\n		print \"Grid scores on development set:\"\n		print\n		for params, mean_score, scores in clf.grid_scores_:\n			print \"%0.3f (+/-%0.03f) for %r\" % (\n				mean_score, scores.std() / 2, params)\n		print"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"mode",
				"swapr/swaps/models.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 260.0,
	"status_bar_visible": true
}
